/*!
 * Jodit Editor (https://xdsoft.net/jodit/)
 * Released under MIT see LICENSE.txt in the project root for license information.
 * Copyright (c) 2013-2021 Valeriy Chupurnov. All rights reserved. https://xdsoft.net
 */
import { Plugin } from '../../core/plugin';
import type { IJodit } from '../../types';
declare module '../../config' {
    interface Config {
        delete: {
            hotkeys: {
                delete: string[];
                deleteWord: string[];
                deleteSentence: string[];
                backspace: string[];
                backspaceWord: string[];
                backspaceSentence: string[];
            };
        };
    }
}
export declare class Delete extends Plugin {
    /** @override */
    requires: string[];
    /**
     * Shortcut for jodit.editor
     */
    private get root();
    /** @override */
    protected afterInit(jodit: IJodit): void;
    /** @override */
    protected beforeDestruct(jodit: IJodit): void;
    /**
     * After Delete command remove extra BR
     */
    private afterDeleteCommand;
    /**
     * Listener BackSpace or Delete button
     */
    private onDelete;
    /**
     * On Not collapsed selection - should only remove whole selected content
     *
     * @example
     * ```html
     * <p>first | stop</p><p>second | stop</p>
     * ```
     * result
     * ```html
     * <p>first | stop</p>
     * ```
     */
    private checkNotCollapsed;
    /**
     * Check possibility the char can be removed
     *
     * @example
     * ```html
     * te|st
     * ```
     * result
     * ```html
     * t|st
     * ```
     */
    private checkRemoveChar;
    /**
     * Helper remove all empty inline parents
     */
    private removeEmptyInlineParent;
    /**
     * Helper add BR element inside empty block element
     */
    private addBRInsideEmptyBlock;
    /**
     * Check possibility inseparable Element can be removed (img, hr etc.)
     *
     * @example
     * ```html
     * <p>first second <img>| stop</p>
     * ```
     * result
     * ```html
     * <p>first second | stop</p>
     * ```
     */
    private checkRemoveInseparableElement;
    /**
     * Inside the CELL table - nothing to do
     *
     * @example
     * ```html
     * <table><tr><td>|test</td></tr></table>
     * ```
     * result
     * ```html
     * <table><tr><td>|test</td></tr></table>
     * ```
     */
    private checkTableCell;
    /**
     * Check if the current empty item can be removed
     *
     * @example
     * ```html
     * <p>first stop</p><p>|<br></p>
     * ```
     * result
     * ```html
     * <p>first stop|</p>
     * ```
     */
    private checkRemoveEmptyParent;
    /**
     * Try join two UL elements
     *
     * @example
     * ```html
     * <ul><li>one</li></ul>|<ol><li>two</li></ol>
     * ```
     * Result
     * ```html
     * <ul><li>one|</li><li>two</li></ul>
     * ```
     */
    private checkJoinTwoLists;
    /**
     * Check if it is possible to remove an empty adjacent element.
     *
     * @example
     * ```html
     * <p><br></p><p>|second stop</p>
     * ```
     * result
     * ```html
     * <p>|second stop</p>
     * ```
     */
    private checkRemoveEmptyNeighbor;
    /**
     * Check if two separate elements can be connected
     */
    private checkJoinNeighbors;
    private checkMoveListContent;
    private moveContentAndRemoveEmpty;
    /**
     * For first item in list on backspace try move his content in new P
     *
     * @example
     * ```html
     * <ul><li>|first</li><li>second</li></ul>
     * ```
     * Result
     * ```html
     * <p>|first</p><ul><li>second</li></ul>
     * ```
     */
    private checkRewrapListItem;
    /**
     * Remove node and replace cursor position out of it
     */
    private safeRemoveEmptyNode;
}
